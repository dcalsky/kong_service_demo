// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dcalsky/kong_service_demo/internal/adapter/repo (interfaces: IRepoHelper)
//
// Generated by this command:
//
//	mockgen -package repo --build_flags=--mod=mod --destination helper_mock.go . IRepoHelper
//

// Package repo is a generated GoMock package.
package repo

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	gorm "gorm.io/gorm"
)

// MockIRepoHelper is a mock of IRepoHelper interface.
type MockIRepoHelper struct {
	ctrl     *gomock.Controller
	recorder *MockIRepoHelperMockRecorder
}

// MockIRepoHelperMockRecorder is the mock recorder for MockIRepoHelper.
type MockIRepoHelperMockRecorder struct {
	mock *MockIRepoHelper
}

// NewMockIRepoHelper creates a new mock instance.
func NewMockIRepoHelper(ctrl *gomock.Controller) *MockIRepoHelper {
	mock := &MockIRepoHelper{ctrl: ctrl}
	mock.recorder = &MockIRepoHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRepoHelper) EXPECT() *MockIRepoHelperMockRecorder {
	return m.recorder
}

// MustTransaction mocks base method.
func (m *MockIRepoHelper) MustTransaction(arg0 context.Context, arg1 func(context.Context)) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "MustTransaction", arg0, arg1)
}

// MustTransaction indicates an expected call of MustTransaction.
func (mr *MockIRepoHelperMockRecorder) MustTransaction(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MustTransaction", reflect.TypeOf((*MockIRepoHelper)(nil).MustTransaction), arg0, arg1)
}

// WithContext mocks base method.
func (m *MockIRepoHelper) WithContext(arg0 context.Context) *gorm.DB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WithContext", arg0)
	ret0, _ := ret[0].(*gorm.DB)
	return ret0
}

// WithContext indicates an expected call of WithContext.
func (mr *MockIRepoHelperMockRecorder) WithContext(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithContext", reflect.TypeOf((*MockIRepoHelper)(nil).WithContext), arg0)
}
